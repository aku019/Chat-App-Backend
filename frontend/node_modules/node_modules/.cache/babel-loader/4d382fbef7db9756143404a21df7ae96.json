{"ast":null,"code":"var _jsxFileName = \"/Users/asish/Desktop/chat app/client/src/components/ChatScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { AppBar, Toolbar, Avatar, Typography, Box, TextField, Stack } from '@mui/material';\nimport MessageCard from './MessageCard';\nimport { useQuery, useMutation, useSubscription } from '@apollo/client';\nimport { GET_MSG } from '../graphql/queries';\nimport SendIcon from '@mui/icons-material/Send';\nimport { SEND_MSG } from '../graphql/mutations';\nimport { MSG_SUB } from '../graphql/subscriptions';\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatScreen = () => {\n  _s();\n\n  const {\n    id,\n    name\n  } = useParams();\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const {\n    userId\n  } = jwt_decode(localStorage.getItem('jwt'));\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_MSG, {\n    variables: {\n      receiverId: +id\n    },\n\n    onCompleted(data) {\n      setMessages(data.messagesByUser);\n    }\n\n  });\n  const [sendMessage] = useMutation(SEND_MSG, {\n    onCompleted(data) {\n      setMessages(prevMessages => [...prevMessages, data.createMessage]);\n    }\n\n  });\n  const {\n    data: subData\n  } = useSubscription(MSG_SUB, {\n    onSubscriptionData(_ref) {\n      let {\n        subscriptionData: {\n          data\n        }\n      } = _ref;\n\n      if (data.messageAdded.receiverId == +id && data.messageAdded.senderId == userId || data.messageAdded.receiverId == userId && data.messageAdded.senderId == +id) {\n        setMessages(prevMessages => [...prevMessages, data.messageAdded]);\n      }\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    flexGrow: 1,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      sx: {\n        backgroundColor: \"white\",\n        boxShadow: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Avatar // src={`https://avatars.dicebear.com/api/initials/${name}.svg`}\n        , {\n          src: `https://ui-avatars.com/api/?name=${name}&background=random`,\n          sx: {\n            width: \"32px\",\n            height: \"32px\",\n            mr: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"black\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      backgroundColor: \"#f5f5f5\",\n      height: \"80vh\",\n      padding: \"10px\",\n      sx: {\n        overflowY: \"auto\"\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"loading chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 20\n      }, this) : messages.map(msg => {\n        return /*#__PURE__*/_jsxDEV(MessageCard, {\n          text: msg.text,\n          date: msg.createdAt,\n          direction: msg.receiverId == +id ? \"end\" : \"start\"\n        }, msg.createdAt, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Enter a message\",\n        variant: \"standard\",\n        fullWidth: true,\n        multiline: true,\n        rows: 2,\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(SendIcon, {\n        fontSize: \"large\",\n        onClick: () => {\n          console.log(\"here\");\n          sendMessage({\n            variables: {\n              receiverId: +id,\n              text: text\n            }\n          });\n          setText(\"\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatScreen, \"/3UjbKQIEVKW3qW25JSXLmen0uQ=\", false, function () {\n  return [useParams, useQuery, useMutation, useSubscription];\n});\n\n_c = ChatScreen;\nexport default ChatScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"names":["React","useState","useEffect","useParams","AppBar","Toolbar","Avatar","Typography","Box","TextField","Stack","MessageCard","useQuery","useMutation","useSubscription","GET_MSG","SendIcon","SEND_MSG","MSG_SUB","jwt_decode","ChatScreen","id","name","text","setText","messages","setMessages","userId","localStorage","getItem","data","loading","error","variables","receiverId","onCompleted","messagesByUser","sendMessage","prevMessages","createMessage","subData","onSubscriptionData","subscriptionData","messageAdded","senderId","backgroundColor","boxShadow","width","height","mr","overflowY","map","msg","createdAt","e","target","value","console","log"],"sources":["/Users/asish/Desktop/chat app/client/src/components/ChatScreen.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\nimport { useParams } from 'react-router-dom';\nimport {AppBar,Toolbar,Avatar, Typography,Box, TextField, Stack} from '@mui/material'\nimport MessageCard from './MessageCard';\nimport { useQuery, useMutation, useSubscription } from '@apollo/client';\nimport { GET_MSG } from '../graphql/queries';\nimport SendIcon from '@mui/icons-material/Send';\nimport { SEND_MSG } from '../graphql/mutations';\nimport { MSG_SUB } from '../graphql/subscriptions';\nimport jwt_decode from 'jwt-decode'\n\nconst ChatScreen = () => {\n  const {id,name} = useParams()\n  const [text,setText] = useState(\"\")\n  const [messages,setMessages] = useState([])\n  const {userId} = jwt_decode(localStorage.getItem('jwt'))\n\n  const {data,loading,error} = useQuery(GET_MSG,{\n    variables:{\n      receiverId: +id\n    },\n    onCompleted(data){\n      setMessages(data.messagesByUser)\n    }\n  })\n\n  const [sendMessage] = useMutation(SEND_MSG,{\n    onCompleted(data){\n      setMessages((prevMessages)=>[...prevMessages,data.createMessage])\n    }\n  })\n\n  const {data:subData} = useSubscription(MSG_SUB,{\n    onSubscriptionData({subscriptionData:{data}}){\n       if(\n         (data.messageAdded.receiverId == +id && data.messageAdded.senderId == userId) ||\n         (data.messageAdded.receiverId == userId && data.messageAdded.senderId == +id) \n       ){\n          setMessages((prevMessages)=>[...prevMessages,data.messageAdded])  \n       }\n    }\n  })\n\n  return (\n    <Box\n    flexGrow={1}\n    > \n    <AppBar position=\"static\" \n    sx={{backgroundColor:\"white\",boxShadow:0}}\n    >\n        <Toolbar>\n            <Avatar\n                // src={`https://avatars.dicebear.com/api/initials/${name}.svg`}\n                src={`https://ui-avatars.com/api/?name=${name}&background=random`}\n                sx={{width:\"32px\",height:\"32px\",mr:2}}\n            />\n            <Typography variant=\"h6\" color=\"black\">{name}</Typography>\n        </Toolbar>\n      </AppBar>\n      <Box backgroundColor=\"#f5f5f5\" height=\"80vh\" padding=\"10px\" sx={{overflowY:\"auto\"}} >\n        {\n          loading? <Typography variant=\"h6\">loading chats</Typography>\n          : messages.map(msg=>{\n            return <MessageCard key={msg.createdAt} text={msg.text} date={msg.createdAt} direction={msg.receiverId == +id? \"end\":\"start\"} />\n          })\n        }\n          {/* \n          <MessageCard text=\"hi mukesh\" date=\"1223\" direction=\"end\" /> */}\n\n       \n      </Box>\n      <Stack direction=\"row\">\n              <TextField\n              placeholder=\"Enter a message\"\n              variant=\"standard\"\n              fullWidth\n              multiline\n              rows={2}\n              value={text}\n              onChange={e=>setText(e.target.value)}\n              />\n            <SendIcon fontSize=\"large\" onClick={()=>{\n              console.log(\"here\");\n              sendMessage({\n                variables:{\n                  receiverId: +id,\n                  text:text\n                }\n                \n              })\n              setText(\"\");\n            }} />\n      </Stack>\n\n\n    </Box>\n  )\n}\n\nexport default ChatScreen"],"mappings":"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"},"metadata":{},"sourceType":"module"}