{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from \"@apollo/client\";\nimport { setContext } from '@apollo/client/link/context';\nimport { split, HttpLink } from '@apollo/client';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport { GraphQLWsLink } from '@apollo/client/link/subscriptions';\nimport { createClient } from 'graphql-ws';\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  return {\n    headers: { ...headers,\n      authorization: localStorage.getItem('jwt') || \"\"\n    }\n  };\n});\nconst httpLink = new HttpLink({\n  uri: 'https://graphql-apollo30.herokuapp.com/graphql'\n});\nconst wsLink = new GraphQLWsLink(createClient({\n  url: 'wss://graphql-apollo30.herokuapp.com/graphql'\n}));\nconst splitLink = split(_ref2 => {\n  let {\n    query\n  } = _ref2;\n  const definition = getMainDefinition(query);\n  return definition.kind === 'OperationDefinition' && definition.operation === 'subscription';\n}, wsLink, authLink.concat(httpLink));","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","BrowserRouter","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","split","HttpLink","getMainDefinition","GraphQLWsLink","createClient","authLink","_","headers","authorization","localStorage","getItem","httpLink","uri","wsLink","url","splitLink","query","definition","kind","operation","concat"],"sources":["/Users/asish/Desktop/chat app/client/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink\n} from \"@apollo/client\";\n\nimport { setContext } from '@apollo/client/link/context';\nimport { split, HttpLink } from '@apollo/client';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport { GraphQLWsLink } from '@apollo/client/link/subscriptions';\nimport { createClient } from 'graphql-ws';\n\n\n\nconst authLink = setContext((_, { headers }) => {\n  return {\n    headers: {\n      ...headers,\n      authorization: localStorage.getItem('jwt')|| \"\" ,\n    }\n  }\n});\n\n\nconst httpLink = new HttpLink({\n  uri: 'https://graphql-apollo30.herokuapp.com/graphql'\n});\n\nconst wsLink = new GraphQLWsLink(createClient({\n  url: 'wss://graphql-apollo30.herokuapp.com/graphql',\n}));\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  authLink.concat(httpLink),\n);"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,cAJF,QAKO,gBALP;AAOA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,gBAAhC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAIA,MAAMC,QAAQ,GAAGN,UAAU,CAAC,CAACO,CAAD,WAAoB;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAC9C,OAAO;IACLA,OAAO,EAAE,EACP,GAAGA,OADI;MAEPC,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,KAArB,KAA8B;IAFtC;EADJ,CAAP;AAMD,CAP0B,CAA3B;AAUA,MAAMC,QAAQ,GAAG,IAAIV,QAAJ,CAAa;EAC5BW,GAAG,EAAE;AADuB,CAAb,CAAjB;AAIA,MAAMC,MAAM,GAAG,IAAIV,aAAJ,CAAkBC,YAAY,CAAC;EAC5CU,GAAG,EAAE;AADuC,CAAD,CAA9B,CAAf;AAIA,MAAMC,SAAS,GAAGf,KAAK,CACrB,SAAe;EAAA,IAAd;IAAEgB;EAAF,CAAc;EACb,MAAMC,UAAU,GAAGf,iBAAiB,CAACc,KAAD,CAApC;EACA,OACEC,UAAU,CAACC,IAAX,KAAoB,qBAApB,IACAD,UAAU,CAACE,SAAX,KAAyB,cAF3B;AAID,CAPoB,EAQrBN,MARqB,EASrBR,QAAQ,CAACe,MAAT,CAAgBT,QAAhB,CATqB,CAAvB"},"metadata":{},"sourceType":"module"}